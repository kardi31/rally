<?php

/**
 * Rally_Model_Doctrine_BaseRally
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property string $slug
 * @property timestamp $date
 * @property boolean $active
 * @property boolean $league_rally
 * @property float $league
 * @property Doctrine_Collection $Surfaces
 * @property Doctrine_Collection $Crews
 * @property Doctrine_Collection $Stages
 * @property Doctrine_Collection $Results
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     Tomasz <kardi31@o2.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Rally_Model_Doctrine_BaseRally extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('rally_rally');
        $this->hasColumn('id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('slug', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('date', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('league_rally', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('league', 'float', 10, array(
             'type' => 'float',
             'default' => 5,
             'length' => '10',
             'scale' => '2',
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Rally_Model_Doctrine_Surface as Surfaces', array(
             'local' => 'id',
             'foreign' => 'rally_id'));

        $this->hasMany('Rally_Model_Doctrine_Crew as Crews', array(
             'local' => 'id',
             'foreign' => 'rally_id'));

        $this->hasMany('Rally_Model_Doctrine_Stage as Stages', array(
             'local' => 'id',
             'foreign' => 'rally_id'));

        $this->hasMany('Rally_Model_Doctrine_Result as Results', array(
             'local' => 'id',
             'foreign' => 'rally_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}