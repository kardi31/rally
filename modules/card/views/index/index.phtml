<script src="/js/flip.js"></script>
<a id="stop" href="javascript:void(0)" style="width:200px;height:50px;display:block;">Stop</a>


<script language="javascript" type="text/javascript">
    $(document).ready(function () {
        //create a new WebSocket object.
        var wsUri = "ws://ral.localhost:9000/server.php";
        websocket = new WebSocket(wsUri);
        var user_id = '<?= $authenticatedUser['id']; ?>';

        websocket.onopen = function (ev) { // connection is open 
            setInterval(function () {
                if (websocket.bufferedAmount == 0)
                    websocket.send("Keep alive from client");
            }, 30000);
//             var msg = {
//                type: 'refreshed',
//                userid: '<?= $authenticatedUser['id']; ?>'
//            };
//            //convert and send data to server
//            websocket.send(JSON.stringify(msg));
        };

        // create tables
        $('#join-table').click(function () {
            var msg = {
                type: 'tableJoined',
                userid: '<?= $authenticatedUser['id']; ?>'
            };
            //convert and send data to server
            websocket.send(JSON.stringify(msg));
        });




        //#### Message received from server
        websocket.onmessage = function (ev) {
            var msg = JSON.parse(ev.data); //PHP sends Json data
            var type = msg.type; //message type

            // request all needed data on first connection
            if (type == 'requestData') {
                var params = {
                    type: 'joined',
                    cards: '<?= $userCards; ?>',
                    username: '<?= $authenticatedUser['username']; ?>',
                    userid: '<?= $authenticatedUser['id']; ?>'
                }
                websocket.send(JSON.stringify(params));
            }
            // when player on table
            // request display table for player
            // so opponent cards are hidden
            if (type == 'getTableForPlayer')
            {
                var msg = {
                    type: 'getPlayerTable',
                    userid: '<?= $authenticatedUser['id']; ?>'
                };
                websocket.send(JSON.stringify(msg));
            }

            // when player on table
            // show table for player
            // so opponent cards are hidden
            if (type == 'showTablePlayer')
            {
                var message = msg.message;
                console.log(msg);
                if (typeof (msg.user_id) !== 'undefined' && msg.user_id == user_id) {

                    var tableid = msg.tableid;
                    window.location.hash = tableid;
                    $('.cardTableWrapper').html(msg.showTable);
                    $('.playerCards div.playerCard.flipIt').flip({
                       trigger: 'manual'
                    });
                    
                    
                }
                if (typeof (msg.user_id2) !== 'undefined' && msg.user_id2 == user_id) {

                    var tableid = msg.tableid;
                    window.location.hash = tableid;
                    $('.cardTableWrapper').html(msg.showTable2);
                    $('.playerCards div.playerCard.flipIt').flip({
                        trigger: 'manual'
                    });
                    
//                    var parent = $('.playerCards div.playerCard.flipIt').parent();
//                    if(parent.hasClass('player1Cards')){
//                        var bottom = 'auto';
//                        var top = 175;
//                    }
//                    else{
//                        var top = 'auto';
//                        var bottom = 175;
//                    }
                }
  
                var elementPlayer1 = $('.playerCards.player1Cards div.playerCard.flipIt');
                elementPlayer1.before( "<div></div>" );
                elementPlayer1.css({"position": "absolute"});
                elementPlayer1.animate({
                        top: 175,
                        left: 325
                    },function(){
                        $(this).flip(true);
    //                  elementPlayer1.css({'top':175,'left':325});
                });
                var elementPlayer2 = $('.playerCards.player2Cards div.playerCard.flipIt');
                elementPlayer2.before( "<div></div>" );
                elementPlayer2.css({"position": "absolute","top":525});
                elementPlayer2.animate({
                    top: 350,
                    left: 325     
                },function(){
                    $(this).flip(true);
    //                  elementPlayer2.css({'bottom':175,'left':325});
                });
                
                 if (typeof (msg.wonPlayer) !== 'undefined'){
                    window.setTimeout(function(){
                        if(msg.wonPlayer=='player1'){
                            elementPlayer1.css({'z-index':10});
                            elementPlayer2.animate({
                                top: 175,
                                left: 325,
                                duration: 5000
                            },function(){
                                $('.playerCards div.playerCard.flipIt').animate({
                                    top:0,
                                    left:0,
                                    duration: 2000
                                },function(){
                                    console.log('innn');
                                    var msg = {
                                        type: 'getPlayerTable',
                                        refreshPoints: true,
                                        userid: '<?= $authenticatedUser['id']; ?>'
                                    };
                                    websocket.send(JSON.stringify(msg));
                                    
                                });
                                
                                
                            });
                            
                    }
                    if(msg.wonPlayer=='player2'){
                        elementPlayer2.css({'z-index':10});
                        elementPlayer1.animate({
                            top: 350,
                            left: 325,
                            duration: 5000
                        },function(){
                            $('.playerCards div.playerCard.flipIt').animate({
                                top:525,
                                left:0,
                                duration: 2000
                            },function(){
                                    console.log('innn');
                                    var msg = {
                                        type: 'getPlayerTable',
                                        refreshPoints: true,
                                        userid: '<?= $authenticatedUser['id']; ?>'
                                    };
                                    websocket.send(JSON.stringify(msg));
                                });
                        });
                    }
                     },3000);
                    
                }
                
                $("#stop").click(function(){
    $('.playerCards div.playerCard.flipIt').stop();
});
                
                
//setTimeout(function(){
//    
//                $('.playerCards div.playerCard.flipIt').flip(true);
//}, 500);
//                $('#cardTableList').html(message);
            }

            // if you join table - show table
            if (type == 'joinedTable')
            {
                var message = msg.message;
                if (typeof (msg.tableid) !== 'undefined' && typeof (msg.user_id) !== 'undefined') {
                    if (msg.user_id == user_id || (typeof (msg.user_id2) !== 'undefined' && msg.user_id2 == user_id)) {
                        var tableid = msg.tableid;
                        window.location.hash = tableid;
                        $('.cardTableWrapper').html(msg.showTable);
                    }
                }
                $('#cardTableList').html(message);
            }
            // user left table
            if (type == 'userLeft')
            {
                var message = msg.message;
                $('#message_box').append("<div><span class=\"joined\" >" + message + " </span>");
            }
            // join the game,
            // ur name is displayed on player list
            if (type == 'joined')
            {

                var message = msg.message;
                $('#cardUserList').html(message);
            }


            /*
             *  Buttons which appear later in game
             */


            $('.playerCards div table tr:not(:first-of-type)').click(function () {
                var skillNo = $(this).index();
                var parentPlayerCards = $(this).parents('.playerCards');

                var parentCard = $(this).parents('.playerCards div.playerCard');

                var cardNo = parentCard.attr('data-rel');
                var cardUserId = parentPlayerCards.attr('data-id');
//                console.log(cardUserId);
//                console.log(cardNo);
//                console.log('clicked');
                if (cardUserId == user_id) {
                    console.log('good');
                    var msg = {
                        type: 'cardClicked',
                        cardNo: cardNo,
                        skillNo: skillNo,
                        userid: '<?= $authenticatedUser['id']; ?>'
                    };
                    websocket.send(JSON.stringify(msg));
                }
            });


            // when you join existing table
            $('.joinSingleTable').click(function () {
                var tableid = $(this).attr('rel');
                var msg = {
                    type: 'existTableJoined',
                    tableid: tableid,
                    userid: '<?= $authenticatedUser['id']; ?>'
                };
                websocket.send(JSON.stringify(msg));
            });

            // quit ur table
            $('.closeTable').click(function () {
                var tableid = $(this).attr('rel');
                var msg = {
                    type: 'closeTable',
                    tableid: tableid,
                    userid: '<?= $authenticatedUser['id']; ?>'
                };
                websocket.send(JSON.stringify(msg));
                // remove hastag from the end
                history.pushState("", document.title, window.location.pathname);
            });

            
//        $('.playerCards > div.playerCard').flip({
//            trigger: 'manual'
//          });
//          $('.playerCards > div.playerCard').on('click',function(){
//              var element = $(this);
//              element.before( "<div></div>" );
//              element.css({"position": "absolute"});
//              element.animate({
//                top: 175,
//                left: 325     
//              },function(){
//                $(this).flip(true);
//              });
//          });

            if (window.location.href.indexOf("#") > -1) {
                $('.cardUserBoxWrapper').hide();
                $('.cardTableWrapper').show();
            }
            else {
                $('.cardUserBoxWrapper').show();
                $('.cardTableWrapper').hide();
            }

            $('#message').val(''); //reset text

        };

        websocket.onerror = function (ev) {
            $('#message_box').append("<div class=\"system_error\">Error Occurred - " + ev.data + "</div>");
        };
        websocket.onclose = function (ev) {

            var msg = {
                type: 'userLeft',
                userid: '<?= $authenticatedUser['id']; ?>'
            };
            websocket.send(JSON.stringify(msg));
        };
    });
</script>

<style>
    .tableName{
        background:red;
        padding:10px;
        text-align:center;
    }
    
    .closeTable{
        float:right;
    }
    
    .playerList > div:first-of-type{
        background:#fff;
        color:#333;
    }
    
    .playerList > div{
        padding:5px;
    }
    
    .playerList > div:nth-of-type(2){
        background:#0000ff;
        color:#fff;
    }
    
    .playerList > div:nth-of-type(2) div{
        color:#000;
    }
    
    .playerList div div{
        background:#868686;
        width:20px;
        float:right;
        margin-right:10px;
        text-align:center;
        font-size:16px;
    }
    
    .selectedCard{
        background:blue;
    }
    .currentPlayingSkill,.currentPlayingSkill td{
        background:red;
    }
    .cardTableWrapper{
        height:700px;
        width:1020px;
    }
    #cardTable{
        width:810px;
        float:left;
        height:700px;
        position:relative;
    }
    #cardTableInfo{
        width:200px;
        float:left;
    }
    .playerCards{
        height:175px;
        width:810px;
        border:1px solid grey;
    }
    .playerCards th{
        position:relative;
    }
    .playerCards th strong{
        z-index:10000;
        position:absolute;
        bottom:0px;left:0px;
        background:rgba(0,0,0,0.6);
        width:100%;
        padding:5px 0px 5px 5px;
        font-size:12px;
    }
    .playerCards td{

        font-size:12px;
    }

    .playerCards img{
        max-width:100%;
    }
    .playerCards div{
        width:160px;
        float:left;
        height:175px;
    }
    .playerCards div.playerCard{
        background:#000;
    }
    .playCard{
        width:160px;
        border:1px solid red;
        height:175px;
        margin:0 auto;
    }
    .playField{
        height:350px;
        border:1px solid red;
    }
    .chat_wrapper {
        width: 700px;
        margin-right: auto;
        margin-left: auto;
        background: #CCCCCC;
        border: 1px solid #999999;
        float:left;
        padding: 10px;
        font: 12px 'lucida grande',tahoma,verdana,arial,sans-serif;
    }
    .chat_wrapper .message_box {
        background: #FFFFFF;
        height: 150px;
        overflow: auto;
        padding: 10px;
        border: 1px solid #999999;
    }
    .chat_wrapper .panel input{
        padding: 2px 2px 2px 5px;
    }
    .system_msg{color: #BDBDBD;font-style: italic;}
    .joined{color: #ff0000;font-style: italic;}
    .user_name{font-weight:bold;}
    .user_message{color: #88B6E0;}

    .cardUserListWrapper {
        width: 200px;
        background: #CCCCCC;
        color:#333;
        text-align:center;
        float:left;
        margin-left:10px;
        font: 12px 'lucida grande',tahoma,verdana,arial,sans-serif;
    }
    .cardTableListWrapper {
        width: 700px;
        background: #CCCCCC;
        color:#333;
        text-align:center;
        float:left;
        margin-left:10px;
        font: 12px 'lucida grande',tahoma,verdana,arial,sans-serif;
    }

    .cardUserListWrapper #cardUserList {
        background: #FFFFFF;
        min-height: 150px;
        overflow: auto;
        padding: 10px;
        border: 1px solid #999999;
    }
    .cardTableListWrapper #cardTableList {
        background: #FFFFFF;
        min-height: 150px;
        overflow: auto;
        padding: 10px;
        border: 1px solid #999999;
    }
    .cardTableWrapper{
        display:none;
    }

    .cardTableBox{
        width:25%;
        float:left;
        border:1px solid black;
    }
</style>
<span class="cardUserBoxWrapper">
    <div class="cardTableListWrapper">
        <button id="join-table">Create new table</button>
        <div class="message_box" id="cardTableList">
        </div>
    </div>

    <div class="cardUserListWrapper">
        <h4>User list</h4>
        <div class="message_box" id="cardUserList"></div>
    </div>
    <div class="clearfix"></div>
</span>
<div class="cardTableWrapper"></div>