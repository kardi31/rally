<?php

/**
 * People_Model_Doctrine_BaseTrainingFactor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $people_id
 * @property decimal $composure
 * @property decimal $speed
 * @property decimal $regularity
 * @property decimal $reflex
 * @property decimal $on_gravel
 * @property decimal $on_tarmac
 * @property decimal $on_snow
 * @property decimal $in_rain
 * @property decimal $dictate_rhytm
 * @property decimal $diction
 * @property decimal $route_description
 * @property decimal $intelligence
 * @property integer $composure_max
 * @property integer $speed_max
 * @property integer $regularity_max
 * @property integer $reflex_max
 * @property integer $on_gravel_max
 * @property integer $on_tarmac_max
 * @property integer $on_snow_max
 * @property integer $in_rain_max
 * @property integer $dictate_rhytm_max
 * @property integer $diction_max
 * @property integer $route_description_max
 * @property integer $intelligence_max
 * @property People_Model_Doctrine_People $People
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     Tomasz <kardi31@o2.pl>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class People_Model_Doctrine_BaseTrainingFactor extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('people_training_factor');
        $this->hasColumn('people_id', 'integer', 4, array(
             'primary' => true,
             'autoincrement' => true,
             'type' => 'integer',
             'length' => '4',
             ));
        $this->hasColumn('composure', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => '10',
             'scale' => '2',
             ));
        $this->hasColumn('speed', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => '10',
             'scale' => '2',
             ));
        $this->hasColumn('regularity', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => '10',
             'scale' => '2',
             ));
        $this->hasColumn('reflex', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => '10',
             'scale' => '2',
             ));
        $this->hasColumn('on_gravel', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => '10',
             'scale' => '2',
             ));
        $this->hasColumn('on_tarmac', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => '10',
             'scale' => '2',
             ));
        $this->hasColumn('on_snow', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => '10',
             'scale' => '2',
             ));
        $this->hasColumn('in_rain', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => '10',
             'scale' => '2',
             ));
        $this->hasColumn('dictate_rhytm', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => '10',
             'scale' => '2',
             ));
        $this->hasColumn('diction', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => '10',
             'scale' => '2',
             ));
        $this->hasColumn('route_description', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => '10',
             'scale' => '2',
             ));
        $this->hasColumn('intelligence', 'decimal', 10, array(
             'type' => 'decimal',
             'length' => '10',
             'scale' => '2',
             ));
        $this->hasColumn('composure_max', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('speed_max', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('regularity_max', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('reflex_max', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('on_gravel_max', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('on_tarmac_max', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('on_snow_max', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('in_rain_max', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('dictate_rhytm_max', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('diction_max', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('route_description_max', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));
        $this->hasColumn('intelligence_max', 'integer', 11, array(
             'type' => 'integer',
             'length' => '11',
             ));

        $this->option('type', 'MyISAM');
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('People_Model_Doctrine_People as People', array(
             'local' => 'people_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $this->actAs($timestampable0);
        $this->actAs($softdelete0);
    }
}